# Update bump details accordingly. Use bump check to confirm.
# bump: redis-version /REDIS_VERSION="(.*)"/ https://github.com/redis/redis.git|semver:*
# REDIS_VERSION="V.R.M" # Specify a stable release
# export ZOPEN_STABLE_TAG="v${REDIS_VERSION}"
export ZOPEN_STABLE_URL="https://github.com/redis/redis.git"
export ZOPEN_STABLE_DEPS="make openssl which pkgconfig check_python coreutils"
export ZOPEN_BUILD_LINE="STABLE"
export ZOPEN_CATEGORIES="database"
export ZOPEN_CONFIGURE="skip"
export ZOPEN_CHECK_OPTS="test"
export ZOPEN_INSTALL_OPTS="install PREFIX=\${ZOPEN_INSTALL_DIR}"
export ZOPEN_COMP="CLANG"
export ZOPEN_MAKE="zopen_make"
export ZOPEN_SYSTEM_PREREQ="zos25"

zopen_make() {
	cd deps; make "$@" fast_float  fpconv  hdr_histogram	hiredis  linenoise lua; cd -
	make "$@"
}

zopen_pre_patch()
{
  export CFLAGS="$CFLAGS $CPPFLAGS -mzos-target=zosv2r5 -D__XPLAT -D__thread= -DMAP_ANON=0 -D_UNIX03_SOURCE=1" 
  export CXXFLAGS="$CXXFLAGS $CPPFLAGS -mzos-target=zosv2r5 -D__XPLAT -D__thread= -DMAP_ANON=0 -D_UNIX03_SOURCE=1 -std=c++11" 
}

zopen_check_results()
{
  dir="$1"
  pfx="$2"
  chk="$1/$2_check.log"

  # Echo the following information to gauge build health
  echo "actualFailures:0"
  echo "totalTests:1"
  echo "expectedFailures:0"
  echo "expectedTotalTests:1"
}

zopen_get_version()
{
  # Modify to echo the version of your tool/library
  # Rather than hardcoding the version, obtain the version by running the tool/library
  echo "1.0.0"
}
